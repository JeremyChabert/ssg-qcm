{
  "openapi": "3.0.2",
  "info": {
    "title": "Service for namespace API",
    "description": "This service is located at [/api/](/api/)",
    "version": ""
  },
  "servers": [
    {
      "url": "/api"
    }
  ],
  "tags": [
    {
      "name": "Questions"
    },
    {
      "name": "Answers"
    },
    {
      "name": "Categories"
    },
    {
      "name": "Exams"
    },
    {
      "name": "QuestionsCategory"
    },
    {
      "name": "Exams_examquestion"
    }
  ],
  "paths": {
    "/Questions": {
      "get": {
        "summary": "Retrieve a list of questions.",
        "tags": [
          "Questions"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "createdAt",
                  "createdAt desc",
                  "createdBy",
                  "createdBy desc",
                  "modifiedAt",
                  "modifiedAt desc",
                  "modifiedBy",
                  "modifiedBy desc",
                  "question",
                  "question desc",
                  "category_ID",
                  "category_ID desc",
                  "possibilities",
                  "possibilities desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "question",
                  "category_ID",
                  "possibilities"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "answers",
                  "category"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved questions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Questions",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/API.Questions"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single question.",
        "tags": [
          "Questions"
        ],
        "requestBody": {
          "description": "New question",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/API.Questions-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created question",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Questions"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Questions({ID})": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single question.",
        "tags": [
          "Questions"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "question",
                  "category_ID",
                  "possibilities"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "answers",
                  "category"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved question",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Questions"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single question.",
        "tags": [
          "Questions"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/API.Questions-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single question.",
        "tags": [
          "Questions"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Questions({ID})/answers": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a list of answers of a question.",
        "tags": [
          "Questions",
          "Answers"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "createdAt",
                  "createdAt desc",
                  "createdBy",
                  "createdBy desc",
                  "modifiedAt",
                  "modifiedAt desc",
                  "modifiedBy",
                  "modifiedBy desc",
                  "answer",
                  "answer desc",
                  "question_ID",
                  "question_ID desc",
                  "correct",
                  "correct desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "answer",
                  "question_ID",
                  "correct"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "question"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved answers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Answers",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/API.Answers"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single answer of a question.",
        "tags": [
          "Questions",
          "Answers"
        ],
        "requestBody": {
          "description": "New answer",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/API.Answers-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created answer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Answers"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Questions({ID})/category": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve category of a question.",
        "tags": [
          "Questions",
          "Categories"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "text"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Categories"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Answers": {
      "get": {
        "summary": "Retrieve a list of answers.",
        "tags": [
          "Answers"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "createdAt",
                  "createdAt desc",
                  "createdBy",
                  "createdBy desc",
                  "modifiedAt",
                  "modifiedAt desc",
                  "modifiedBy",
                  "modifiedBy desc",
                  "answer",
                  "answer desc",
                  "question_ID",
                  "question_ID desc",
                  "correct",
                  "correct desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "answer",
                  "question_ID",
                  "correct"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "question"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved answers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Answers",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/API.Answers"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single answer.",
        "tags": [
          "Answers"
        ],
        "requestBody": {
          "description": "New answer",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/API.Answers-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created answer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Answers"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Answers({ID})": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single answer.",
        "tags": [
          "Answers"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "answer",
                  "question_ID",
                  "correct"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "question"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved answer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Answers"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single answer.",
        "tags": [
          "Answers"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/API.Answers-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single answer.",
        "tags": [
          "Answers"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Answers({ID})/question": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve question of a answer.",
        "tags": [
          "Answers",
          "Questions"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "question",
                  "category_ID",
                  "possibilities"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "answers",
                  "category"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved question",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Questions"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Categories": {
      "get": {
        "summary": "Retrieve a list of categories.",
        "tags": [
          "Categories"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "text",
                  "text desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "text"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Categories",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/API.Categories"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single category.",
        "tags": [
          "Categories"
        ],
        "requestBody": {
          "description": "New category",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/API.Categories-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Categories"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Categories({ID})": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single category.",
        "tags": [
          "Categories"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "text"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Categories"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single category.",
        "tags": [
          "Categories"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/API.Categories-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single category.",
        "tags": [
          "Categories"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Exams": {
      "get": {
        "summary": "Retrieve a list of exams.",
        "tags": [
          "Exams"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "createdAt",
                  "createdAt desc",
                  "createdBy",
                  "createdBy desc",
                  "modifiedAt",
                  "modifiedAt desc",
                  "modifiedBy",
                  "modifiedBy desc",
                  "score",
                  "score desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "score"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "examquestion"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved exams",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Exams",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/API.Exams"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single exam.",
        "tags": [
          "Exams"
        ],
        "requestBody": {
          "description": "New exam",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/API.Exams-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created exam",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Exams"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Exams({ID})": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single exam.",
        "tags": [
          "Exams"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "score"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "examquestion"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved exam",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Exams"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single exam.",
        "tags": [
          "Exams"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/API.Exams-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single exam.",
        "tags": [
          "Exams"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Exams({ID})/examquestion": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a list of examquestion of a exam.",
        "tags": [
          "Exams",
          "Exams_examquestion"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "up__ID",
                  "up__ID desc",
                  "ID_ID",
                  "ID_ID desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "up__ID",
                  "ID_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "up_",
                  "ID"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved examquestion",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Exams_examquestion",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/API.Exams_examquestion"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single examquestion of a exam.",
        "tags": [
          "Exams",
          "Exams_examquestion"
        ],
        "requestBody": {
          "description": "New examquestion",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/API.Exams_examquestion-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created examquestion",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Exams_examquestion"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/QuestionsCategory": {
      "get": {
        "summary": "Retrieve a list of questions category.",
        "tags": [
          "QuestionsCategory"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "questioncategory",
                  "questioncategory desc",
                  "text",
                  "text desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "questioncategory",
                  "text"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved questions category",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of QuestionsCategory",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/API.QuestionsCategory"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/QuestionsCategory('{text}')": {
      "parameters": [
        {
          "description": "key: text",
          "in": "path",
          "name": "text",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single questions category.",
        "tags": [
          "QuestionsCategory"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "questioncategory",
                  "text"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved questions category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.QuestionsCategory"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Exams_examquestion": {
      "get": {
        "summary": "Retrieve a list of exams_examquestion.",
        "tags": [
          "Exams_examquestion"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "up__ID",
                  "up__ID desc",
                  "ID_ID",
                  "ID_ID desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "up__ID",
                  "ID_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "up_",
                  "ID"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved exams_examquestion",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Exams_examquestion",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/API.Exams_examquestion"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single exams_examquestion.",
        "tags": [
          "Exams_examquestion"
        ],
        "requestBody": {
          "description": "New exams_examquestion",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/API.Exams_examquestion-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created exams_examquestion",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Exams_examquestion"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Exams_examquestion(up__ID={up__ID},ID_ID={ID_ID})": {
      "parameters": [
        {
          "description": "key: up__ID",
          "in": "path",
          "name": "up__ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: ID_ID",
          "in": "path",
          "name": "ID_ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single exams_examquestion.",
        "tags": [
          "Exams_examquestion"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "up__ID",
                  "ID_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "up_",
                  "ID"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved exams_examquestion",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Exams_examquestion"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single exams_examquestion.",
        "tags": [
          "Exams_examquestion"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/API.Exams_examquestion-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single exams_examquestion.",
        "tags": [
          "Exams_examquestion"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Exams_examquestion(up__ID={up__ID},ID_ID={ID_ID})/up_": {
      "parameters": [
        {
          "description": "key: up__ID",
          "in": "path",
          "name": "up__ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: ID_ID",
          "in": "path",
          "name": "ID_ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve up_ of a exams_examquestion.",
        "tags": [
          "Exams_examquestion",
          "Exams"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "score"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "examquestion"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved up_",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Exams"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Exams_examquestion(up__ID={up__ID},ID_ID={ID_ID})/ID": {
      "parameters": [
        {
          "description": "key: up__ID",
          "in": "path",
          "name": "up__ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: ID_ID",
          "in": "path",
          "name": "ID_ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve i d of a exams_examquestion.",
        "tags": [
          "Exams_examquestion",
          "Questions"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "question",
                  "category_ID",
                  "possibilities"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "answers",
                  "category"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved i d",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Questions"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/generateExam()": {
      "get": {
        "summary": "Invoke function generateExam",
        "tags": [
          "Exams"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/API.Exams"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/$batch": {
      "post": {
        "summary": "Send a group of requests",
        "description": "Group multiple requests into a single request payload, see [Batch Requests](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_BatchRequests).\n\n*Please note that \"Try it out\" is not supported for this request.*",
        "tags": [
          "Batch Requests"
        ],
        "requestBody": {
          "required": true,
          "description": "Batch request",
          "content": {
            "multipart/mixed;boundary=request-separator": {
              "schema": {
                "type": "string"
              },
              "example": "--request-separator\nContent-Type: application/http\nContent-Transfer-Encoding: binary\n\nGET Questions HTTP/1.1\nAccept: application/json\n\n\n--request-separator--"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Batch response",
            "content": {
              "multipart/mixed": {
                "schema": {
                  "type": "string"
                },
                "example": "--response-separator\nContent-Type: application/http\n\nHTTP/1.1 200 OK\nContent-Type: application/json\n\n{...}\n--response-separator--"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "API.Questions": {
        "title": "Questions",
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "maxLength": 255,
            "nullable": true,
            "description": "{i18n>UserID.Description}"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "modifiedBy": {
            "type": "string",
            "maxLength": 255,
            "nullable": true,
            "description": "{i18n>UserID.Description}"
          },
          "question": {
            "type": "string"
          },
          "answers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/API.Answers"
            }
          },
          "answers@odata.count": {
            "$ref": "#/components/schemas/count"
          },
          "category": {
            "allOf": [
              {
                "$ref": "#/components/schemas/API.Categories"
              }
            ],
            "nullable": true
          },
          "category_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "possibilities": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "default": 1
          }
        }
      },
      "API.Questions-create": {
        "title": "Questions (for create)",
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "question": {
            "type": "string"
          },
          "answers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/API.Answers-create"
            }
          },
          "category": {
            "allOf": [
              {
                "$ref": "#/components/schemas/API.Categories-create"
              }
            ],
            "nullable": true
          },
          "category_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "possibilities": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "default": 1
          }
        },
        "required": [
          "ID"
        ]
      },
      "API.Questions-update": {
        "title": "Questions (for update)",
        "type": "object",
        "properties": {
          "question": {
            "type": "string"
          },
          "category_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "possibilities": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "default": 1
          }
        }
      },
      "API.Answers": {
        "title": "Answers",
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "maxLength": 255,
            "nullable": true,
            "description": "{i18n>UserID.Description}"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "modifiedBy": {
            "type": "string",
            "maxLength": 255,
            "nullable": true,
            "description": "{i18n>UserID.Description}"
          },
          "answer": {
            "type": "string"
          },
          "question": {
            "allOf": [
              {
                "$ref": "#/components/schemas/API.Questions"
              }
            ],
            "nullable": true
          },
          "question_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "correct": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "API.Answers-create": {
        "title": "Answers (for create)",
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "answer": {
            "type": "string"
          },
          "question": {
            "allOf": [
              {
                "$ref": "#/components/schemas/API.Questions-create"
              }
            ],
            "nullable": true
          },
          "question_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "correct": {
            "type": "boolean",
            "nullable": true
          }
        },
        "required": [
          "ID"
        ]
      },
      "API.Answers-update": {
        "title": "Answers (for update)",
        "type": "object",
        "properties": {
          "answer": {
            "type": "string"
          },
          "question_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "correct": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "API.Categories": {
        "title": "Categories",
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "text": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "API.Categories-create": {
        "title": "Categories (for create)",
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "text": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "ID"
        ]
      },
      "API.Categories-update": {
        "title": "Categories (for update)",
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "API.Exams": {
        "title": "Exams",
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "maxLength": 255,
            "nullable": true,
            "description": "{i18n>UserID.Description}"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "modifiedBy": {
            "type": "string",
            "maxLength": 255,
            "nullable": true,
            "description": "{i18n>UserID.Description}"
          },
          "examquestion": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/API.Exams_examquestion"
            }
          },
          "examquestion@odata.count": {
            "$ref": "#/components/schemas/count"
          },
          "score": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "default": 0
          }
        }
      },
      "API.Exams-create": {
        "title": "Exams (for create)",
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "examquestion": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/API.Exams_examquestion-create"
            }
          },
          "score": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "default": 0
          }
        },
        "required": [
          "ID"
        ]
      },
      "API.Exams-update": {
        "title": "Exams (for update)",
        "type": "object",
        "properties": {
          "score": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "default": 0
          }
        }
      },
      "API.QuestionsCategory": {
        "title": "QuestionsCategory",
        "type": "object",
        "properties": {
          "questioncategory": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "text": {
            "type": "string"
          }
        }
      },
      "API.Exams_examquestion": {
        "title": "Exams_examquestion",
        "type": "object",
        "properties": {
          "up_": {
            "$ref": "#/components/schemas/API.Exams"
          },
          "up__ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "ID": {
            "allOf": [
              {
                "$ref": "#/components/schemas/API.Questions"
              }
            ],
            "nullable": true
          },
          "ID_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      },
      "API.Exams_examquestion-create": {
        "title": "Exams_examquestion (for create)",
        "type": "object",
        "properties": {
          "up_": {
            "$ref": "#/components/schemas/API.Exams-create"
          },
          "up__ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "ID": {
            "allOf": [
              {
                "$ref": "#/components/schemas/API.Questions-create"
              }
            ],
            "nullable": true
          },
          "ID_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        "required": [
          "up__ID",
          "ID_ID"
        ]
      },
      "API.Exams_examquestion-update": {
        "title": "Exams_examquestion (for update)",
        "type": "object"
      },
      "count": {
        "anyOf": [
          {
            "type": "number"
          },
          {
            "type": "string"
          }
        ],
        "description": "The number of entities in the collection. Available when using the [$count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount) query option."
      },
      "error": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "object",
            "required": [
              "code",
              "message"
            ],
            "properties": {
              "code": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "target": {
                "type": "string"
              },
              "details": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "target": {
                      "type": "string"
                    }
                  }
                }
              },
              "innererror": {
                "type": "object",
                "description": "The structure of this object is service-specific"
              }
            }
          }
        }
      }
    },
    "parameters": {
      "top": {
        "name": "$top",
        "in": "query",
        "description": "Show only the first n items, see [Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)",
        "schema": {
          "type": "integer",
          "minimum": 0
        },
        "example": 50
      },
      "skip": {
        "name": "$skip",
        "in": "query",
        "description": "Skip the first n items, see [Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)",
        "schema": {
          "type": "integer",
          "minimum": 0
        }
      },
      "count": {
        "name": "$count",
        "in": "query",
        "description": "Include count of items, see [Count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)",
        "schema": {
          "type": "boolean"
        }
      },
      "search": {
        "name": "$search",
        "in": "query",
        "description": "Search items by search phrases, see [Searching](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionsearch)",
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {
      "error": {
        "description": "Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            }
          }
        }
      }
    }
  }
}